<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <title>CarolR</title>
    <!-- midi.js package -->
    <script src="./js/MIDI/AudioDetect.js" type="text/javascript"></script>
    <script src="./js/MIDI/LoadPlugin.js" type="text/javascript"></script>
    <script src="./js/MIDI/Plugin.js" type="text/javascript"></script>
    <script src="./js/MIDI/Player.js" type="text/javascript"></script>
    <script src="./js/Window/DOMLoader.XMLHttp.js" type="text/javascript"></script>
    <script src="./js/Window/DOMLoader.script.js" type="text/javascript"></script>
    <!-- sonicnet.js package -->
    <script src="./js/sonicnet.js" type="text/javascript"></script>
    <!-- extras -->
    <script src="./js/Base64.js" type="text/javascript"></script>
    <script src="./js/base64binary.js" type="text/javascript"></script>
</head>
<body>
    <button id="piano-melody">Piano Melody</button>

    <script type="text/javascript">

        window.onload = function () {

            function playNotes(ops) {
                for (var i = 0; i < ops.length; i++) {
                    if (ops[i][0] === 1) {
                        MIDI.noteOn(0, ops[i][1], 127, ops[i][2]);
                    } else {
                        MIDI.noteOff(0, ops[i][1], ops[i][2]);
                    }
                }
            }

            function selectPianoMelody() {
                MIDI.loadPlugin({
                    soundfontUrl: "./soundfont/",
                    instrument: "acoustic_grand_piano",
                    callback: function () {
                        // play the note
                        MIDI.setVolume(0, 127);
                    }
                });
            }

            document.getElementById('piano-melody').onclick = function () {
                selectPianoMelody();
            };

            function playSingle(note) {
                playNotes([[1, note, 0], [0, note, 0.75]]);
            }

            selectPianoMelody();

            function isNumber(n) {
                return !isNaN(parseFloat(n)) && isFinite(n);
            }
            
            function decode(code) {
                if (isNumber(code)) {
                    return parseInt(code, 10) + 48;
                } else {
                    return code.charCodeAt(0) - 7;
                }
            }

            sserver = new SonicServer({ alphabet: '0123456789AB' });
            sserver.on('message', function (message) {
                console.log("Message:" + message);
                var note = decode(message);
                console.log("Note: " + note);
                playSingle(note);
            });
            sserver.start();
        };

    </script>
</body>
</html>
